{"ast":null,"code":"var _jsxFileName = \"/Users/ttmgs/Desktop/app/src/components/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'https://project-chat-application.herokuapp.com/';\nlet socket;\nconst Chat = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", _ref2 => {\n      let {\n        users\n      } = _ref2;\n      setUsers(users);\n    });\n  }, []);\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 14\n  }, this);\n};\n_s(Chat, \"NKZGbzfWHlS0Y+OfA88k1uWyNPI=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","queryString","io","TextContainer","Messages","InfoBar","Input","jsxDEV","_jsxDEV","ENDPOINT","socket","Chat","_ref","_s","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","parse","search","emit","error","alert","on","_ref2","sendMessage","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ttmgs/Desktop/app/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\n\nimport './Chat.css';\n\nconst ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setRoom(room);\n        setName(name)\n\n        socket.emit('join', { name, room }, (error) => {\n            if (error) {\n                alert(error);\n            }\n        });\n    }, [ENDPOINT, location.search]);\n\n    useEffect(() => {\n        socket.on('message', message => {\n            setMessages(messages => [...messages, message]);\n        });\n\n        socket.on(\"roomData\", ({ users }) => {\n            setUsers(users);\n        });\n    }, []);\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if (message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n    return ( <\n        div className = \"outerContainer\" >\n        <\n        div className = \"container\" >\n        <\n        InfoBar room = { room }\n        /> <\n        Messages messages = { messages }\n        name = { name }\n        /> <\n        Input message = { message }\n        setMessage = { setMessage }\n        sendMessage = { sendMessage }\n        /> <\n        /div> <\n        TextContainer users = { users }\n        /> <\n        /div>\n    );\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}